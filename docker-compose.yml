services:
  mongo:
    container_name: mongo-WasteWise-container
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: PgeCz77fvd9y65jY9QLk
      MONGO_INITDB_DATABASE: WasteWise
      MONGO_USER: user
      MONGO_PASSWORD: 7lGxHhhtjfKcmogOGk2r
    expose:
      - 27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./mongod.conf:/etc/mongod.conf:ro
      - mongodb_data:/data/db

#  mongo-express:
#    container_name: mongo-express
#    image: mongo-express
#    restart: always
#    depends_on:
#      - mongo
#      - nginx
#    exposed:
#      - 8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: PgeCz77fvd9y65jY9QLk
#      ME_CONFIG_MONGODB_URL: mongodb://root:PgeCz77fvd9y65jY9QLk@mongo:27017/?useUnifiedTopology=true

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./backend/:/app/
      - /app/node_modules
    depends_on:
      - mongo
      - nginx
    expose:
      - 3000
    environment:
      DB_NAME: "WasteWise"
      DB_USER: "user"
      DB_PWD: "7lGxHhhtjfKcmogOGk2r"
      JWT_SECRET: "1WBw#9d#ve0@Mo*5LVxjgAH3&RtbyG99"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./frontend/:/app/
      - /app/node_modules
    depends_on:
      - backend
      - nginx
    expose:
      - 3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always

  nginx:
    container_name: nginx
    image: nginx:stable
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./log:/var/log/nginx/
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - webroot:/var/www/certbot/:ro
      - certificate:/etc/letsencrypt/:ro
#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./config.ini:/config.ini:ro
#      - webroot:/var/www/certbot
#      - certificate:/etc/letsencrypt
#      - certobt_data:/var/lib/letsencrypt
#    command: certonly --config /config.ini --webroot --webroot-path /var/www/certbot/ --non-interactive -d wastewise.duckdns.org
#    depends_on:
#      - nginx

volumes:
  mongodb_data:
  webroot:
  certobt_data:
  certificate:
